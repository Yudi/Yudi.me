---
import Hideable from "../Hideable.svelte";
import type { ResumeStrings } from "../resume-strings.interface";
import type { ResumeData, SafeLanguage } from "../resume.interface";
import SectionTitle from "../shared/SectionTitle.astro";

interface Props {
  str: ResumeStrings;
  interests: ResumeData["interests"];
  safeLanguage: SafeLanguage;
}

const { str, interests, safeLanguage } = Astro.props;
---

<section>
  <Hideable client:load>
    <SectionTitle title={str.interests} />
    <ul class="mb-2 ml-4 list-disc">
      {
        interests.map((interest) => (
          <Hideable client:load hide={interest.hidden}>
            <li class="mb-2 flex flex-wrap items-baseline gap-x-1">
              <span class="font-semibold print:text-sm">{interest.section[safeLanguage]}: </span>
              {() => {
                if (typeof interest.items === "string") {
                  return <span class="print:text-sm">{interest.items} </span>;
                } else if (typeof interest.items === "object" && Array.isArray(interest.items)) {
                  return <span class="print:text-sm">{interest.items.join(", ")} </span>;
                } else if (typeof interest.items === "object" && interest.items[safeLanguage]) {
                  return <span class="print:text-sm">{interest.items[safeLanguage].join(", ")} </span>;
                } else {
                  return null;
                }
              }}
            </li>
          </Hideable>
        ))
      }
    </ul>
  </Hideable>
</section>
