---
import Hideable from "../Hideable.svelte";
import type { ResumeStrings } from "../resume-strings.interface";
import type { ResumeData, SafeLanguage } from "../resume.interface";
import SectionTitle from "../shared/SectionTitle.astro";

interface Props {
  str: ResumeStrings;
  technologies: ResumeData["technologies"];
  safeLanguage: SafeLanguage;
}

const { str, technologies, safeLanguage } = Astro.props;
---

<section>
  <Hideable client:load>
    <SectionTitle title={str.technologies} />
    <ul>
      {
        technologies.map((tech) => (
          <Hideable client:load hide={tech.hidden}>
            <li class="ml-4 mb-2 ">
              <span class="mr-2 print:text-sm font-semibold">{tech.section[safeLanguage]}:</span>
              <span class="print:text-sm">
                {(() => {
                  if (typeof tech.skills === "string") {
                    return tech.skills;
                  } else if (Array.isArray(tech.skills)) {
                    return tech.skills.join(", ");
                  } else if (typeof tech.skills === "object") {
                    switch (safeLanguage) {
                      case "en":
                        return tech.skills.en;
                      case "pt":
                        return tech.skills.pt;
                      default:
                        return null;
                    }
                  } else {
                    return null;
                  }
                })()}
              </span>
            </li>
          </Hideable>
        ))
      }
    </ul>
  </Hideable>
</section>
